# Docker-specific configuration
spring.application.name=meli-item-detail

# ===== REDIS CONFIGURATION FOR DOCKER =====
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# ===== LOGGING CONFIGURATION FOR CONTAINERS =====
logging.level.com.meli.challenge=INFO
logging.level.org.springframework.data.redis=WARN
logging.level.org.springframework.web=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===== SERVER CONFIGURATION =====
server.port=8080
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# ===== ACTUATOR CONFIGURATION FOR HEALTH CHECKS =====
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.redis.enabled=true
management.endpoint.health.redis.enabled=true

# ===== CACHE CONFIGURATION =====
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# ===== SECURITY CONFIGURATION =====
server.error.include-stacktrace=never
server.error.include-message=always

# ===== PERFORMANCE CONFIGURATION =====
spring.jpa.open-in-view=false
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10 